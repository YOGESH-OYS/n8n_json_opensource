{
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "72590fa0-cf12-4249-80fc-7aaec9992390",
              "name": "automationID",
              "type": "string",
              "value": "optional-enter-reference-tracking-identifier"
            },
            {
              "id": "24e9b1c3-2955-4e0b-9b4b-a6b9d046fb72",
              "name": "apiKey",
              "type": "string",
              "value": "YOUTUBE_API"
            },
            {
              "id": "b6600a42-1b8d-486a-a51d-0868bc45452e",
              "name": "youtubeURL",
              "type": "string",
              "value": "https://youtu.be/drQK8ciCAjY?si=kequbiuHwuyRyG1U"
            },
            {
              "id": "ce9a9a40-5ae4-4106-ae61-0daba2ec185f",
              "name": "promptType",
              "type": "string",
              "value": "transcript"
            }
          ]
        },
        "options": {}
      },
      "id": "67e1c684-6fa8-4a7a-b767-3fecc32d0ce3",
      "name": "Set: Define Initial Variables",
      "type": "n8n-nodes-base.set",
      "position": [
        1696,
        976
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8be68e95-53df-492f-a88a-14c06f51f531",
              "name": "prompt",
              "type": "string",
              "value": "=Transcribe the video. Return only the spoken dialogue, verbatim. Omit any additional text or descriptions."
            },
            {
              "id": "b445c2da-934f-4a78-a57b-f383d8950f8a",
              "name": "model",
              "type": "string",
              "value": "gemini-2.5-flash"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "7bc407c3-4df2-44ef-b344-928e140cd66d",
      "name": "Set: Transcript Prompt",
      "type": "n8n-nodes-base.set",
      "position": [
        1712,
        1616
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "300bfbe7-8d13-41ba-8828-17bba1d0eabe",
              "name": "answerAIGenerated",
              "type": "string",
              "value": "={{ $json.candidates?.[0]?.content?.parts?.[0]?.text ? $json.candidates[0].content.parts[0].text : ($json.error ? $json.error : \"No content or error found\") }}"
            },
            {
              "id": "a54eeb5d-e4de-4fd9-a15c-be51cc414c46",
              "name": "promptTokenCount",
              "type": "string",
              "value": "={{ $json.usageMetadata?.promptTokenCount ? $json.usageMetadata.promptTokenCount : ($json.error ? $json.error : \"No content or error found\") }}"
            },
            {
              "id": "dd590788-069e-48d9-adb2-6a5d10f8af2f",
              "name": "candidatesTokenCount",
              "type": "string",
              "value": "={{ $json.usageMetadata?.candidatesTokenCount ? $json.usageMetadata.candidatesTokenCount : ($json.error ? $json.error : \"No content or error found\") }}"
            },
            {
              "id": "23766495-25df-4d3d-bc62-9e79a860ee19",
              "name": "totalTokenCount",
              "type": "string",
              "value": "={{ $json.usageMetadata?.totalTokenCount ? $json.usageMetadata.totalTokenCount : ($json.error ? $json.error : \"No content or error found\") }}"
            },
            {
              "id": "cfad5ba2-a2c5-48ff-b64b-9131a51fd23c",
              "name": "modelVersionUsed",
              "type": "string",
              "value": "={{ $json.modelVersion ? $json.modelVersion : ($json.error ? $json.error : \"No content or error found\") }}"
            }
          ]
        },
        "includeOtherFields": true,
        "include": "except",
        "excludeFields": "candidates, usageMetadata",
        "options": {}
      },
      "id": "18f79fac-13b4-412c-9f9d-1bcbce9c5eb4",
      "name": "Set Fields: Define Outcome",
      "type": "n8n-nodes-base.set",
      "position": [
        1744,
        1296
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://generativelanguage.googleapis.com/v1beta/models/{{ $json.model }}:generateContent?key={{ $json.apiKey }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [{\n    \"parts\": [\n      { \"text\": {{ JSON.stringify($json.prompt) }} },\n      { \"file_data\": { \"file_uri\": \"{{ $json.youtubeURL }}\" } }\n    ]\n  }]\n}",
        "options": {}
      },
      "id": "becc0c69-b390-4758-a224-a6f170002b04",
      "name": "HTTP Request to Google",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2608,
        1952
      ],
      "typeVersion": 4.2,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "includeOtherFields": true,
        "options": {}
      },
      "id": "fd2abb23-bdf1-49d2-93b9-dae0e66b1826",
      "name": "Set: Merged Values",
      "type": "n8n-nodes-base.set",
      "position": [
        1728,
        1952
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "148e9a72-f826-468c-86a3-471873717ed4",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "f18b0f5b-6def-476a-8e0c-e66884a129f5",
      "name": "If: Was an error detected?",
      "type": "n8n-nodes-base.if",
      "position": [
        3184,
        1952
      ],
      "typeVersion": 2.2,
      "disabled": true
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\n  json: {\n    ...$json, // Keep data from http request\n    ...$('Set: Merged Values').item.json, // Keep data from before http request\n  }\n};\n\n\n\n"
      },
      "id": "9b76e191-0d0a-4873-985a-ded9284326d4",
      "name": "Code: Merge data from prior nodes with HTTP Output",
      "type": "n8n-nodes-base.code",
      "position": [
        2608,
        1376
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2592,
        656
      ],
      "id": "7e0980f7-8d8c-44c0-bec6-468cb16539bd",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "path": "a19517f1-a7b9-4071-bd60-a6bbb7f326d3",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        1456,
        688
      ],
      "id": "2daa35da-ba10-4d76-a569-8baeb1fa4440",
      "name": "Webhook",
      "webhookId": "a19517f1-a7b9-4071-bd60-a6bbb7f326d3"
    },
    {
      "parameters": {
        "content": "## Process & Respond\n",
        "height": 1328,
        "width": 1120,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2368,
        880
      ],
      "typeVersion": 1,
      "id": "b0691657-a54a-44c1-b438-6d27c31c4926",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": " \n## Receives incoming webhook data: youtubeURL, apiKey, promptType, automationID.\n\nThis starts the transcription workflow.\n",
        "height": 224,
        "width": 432,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1872,
        624
      ],
      "typeVersion": 1,
      "id": "a88f0473-ca3c-4326-ae2e-dca809db82b4",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Prepare Data\n",
        "height": 1328,
        "width": 1056,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        880
      ],
      "typeVersion": 1,
      "id": "c6f63f78-032e-49ce-9c66-f63203761ea6",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## Transcription Request Listener\n",
        "height": 304,
        "width": 2208
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        576
      ],
      "typeVersion": 1,
      "id": "28e46b29-ad4a-4e3e-a7ff-a27cf682335e",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## Responds to webhook request with transcription text and metadata.\n\nEnds transcription workflow.\n",
        "height": 224,
        "width": 432,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2992,
        624
      ],
      "typeVersion": 1,
      "id": "e22b612e-96b2-4807-8a1b-f323a522e60e",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "## Initializes variables like API key, YouTube URL, promptType (\"transcript\"), and automationID for the transcription request.\n",
        "height": 224,
        "width": 432,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1872,
        944
      ],
      "typeVersion": 1,
      "id": "389951cd-456a-4604-9487-1653b8dad367",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "## Extracts generated transcription, token usage, and model version from API response.\n\nPrepares final output JSON for webhook response.\n",
        "height": 224,
        "width": 432,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1872,
        1248
      ],
      "typeVersion": 1,
      "id": "5a129f89-4f88-4804-a43f-23e2b6661753",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Sets transcription prompt: \"Transcribe the video. Return only the spoken dialogue, verbatim.\"\n\nSets model as \"gemini-2.5-flash\" for multimodal transcription.\n",
        "height": 224,
        "width": 432,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1872,
        1568
      ],
      "typeVersion": 1,
      "id": "3f49f359-b7a1-45d5-b32b-f59e8aeaf46c",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "## Combines initial variables and prompt into unified JSON for the HTTP request node.\n",
        "height": 224,
        "width": 432,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1872,
        1904
      ],
      "typeVersion": 1,
      "id": "21909e28-e480-44af-b856-a4bd98f6e288",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "## Merges HTTP response data with previous node data for downstream usage.\n\nPrepares transcription text and token counts.\n",
        "height": 224,
        "width": 432,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2432,
        1120
      ],
      "typeVersion": 1,
      "id": "6e3ca55d-fdd4-40dc-9d5d-b56ad82f4f5d",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "## Calls Google Generative Language API POST /models/{{model}}:generateContent with API key.\n\nSends YouTube video URL and transcription prompt as multimodal input.\n\nReceives transcription response as output.\n",
        "height": 288,
        "width": 432,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2448,
        1632
      ],
      "typeVersion": 1,
      "id": "bc28d5a1-ea49-4cc2-96f2-356156752a44",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "content": "## IF EXECUTION ERROR INBETWEEN",
        "height": 288,
        "width": 432,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2960,
        1632
      ],
      "typeVersion": 1,
      "id": "50cc359f-d0f0-4936-8ddd-c260b0b839f3",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "## Transcription Workflow Usage Guide\n\n---\n\n### 1. Setup Google API Key\n\n- Go to [Google Cloud Console](https://console.cloud.google.com/).\n- Create or choose a project.\n- Enable **Google Generative Language API** or **Gemini API**.\n- Navigate to **Credentials** and create an **API key**.\n- Copy the API key for use in the workflow.\n\n---\n\n### 2. Configure n8n Workflow\n\n- Deploy the workflow with three main node groups:\n\n  - **Transcription Request Listener (Webhook nodes)**  \n    Listens for incoming requests containing:\n    - `youtubeURL` (YouTube video URL)  \n    - `apiKey` (Google API key)  \n\n  - **Prepare Data (Set nodes)**  \n    Prepares variables for the request including:\n    - Transcription prompt text  \n    - Target generative model (default `\"gemini-2.5-flash\"`)\n\n  - **Process & Respond (HTTP Request, Code & Response nodes)**  \n    Sends request to Google Generative Language API to transcribe video, processes AI response, and sends transcription back.\n\n---\n\n### 3. Using the Workflow\n\n- Send an HTTP POST request to the exposed webhook URL with JSON body:\n\n{\n\"youtubeURL\": \"https://youtu.be/<video_id>\",\n\"apiKey\": \"<Your_Google_API_Key>\",\n\"promptType\": \"transcript\",\n\"automationID\": \"optional-reference\"\n}\n\n\n- The workflow returns the transcribed video dialogue text as JSON.\n\n---\n\n### 4. Notes\n\n- Use valid API key for authentication.\n- Ensure the generative model supports video/audio (e.g. `\"gemini-2.5-flash\"`).\n- The prompt instructs the AI to transcribe spoken dialogue verbatim.\n- Handle any errors or rate limits as per Google API docs.\n\n---\n\n",
        "height": 1360,
        "width": 752
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        720
      ],
      "typeVersion": 1,
      "id": "b72d28e2-c924-4d71-a5e8-8ca5ec0382a4",
      "name": "Sticky Note"
    }
  ],
  "connections": {
    "Set: Define Initial Variables": {
      "main": [
        [
          {
            "node": "Set: Transcript Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set: Transcript Prompt": {
      "main": [
        [
          {
            "node": "Set: Merged Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields: Define Outcome": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request to Google": {
      "main": [
        [
          {
            "node": "Code: Merge data from prior nodes with HTTP Output",
            "type": "main",
            "index": 0
          },
          {
            "node": "If: Was an error detected?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set: Merged Values": {
      "main": [
        [
          {
            "node": "HTTP Request to Google",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code: Merge data from prior nodes with HTTP Output": {
      "main": [
        [
          {
            "node": "Set Fields: Define Outcome",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Set: Define Initial Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "0556d42a3e9fe1d8b06eeb5e9981feef7405e26084d40409f10279852a5b07e3"
  }
}